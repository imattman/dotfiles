#!/usr/bin/env bash

# fail early
set -euo pipefail

if [[ -n "${DEBUG:=}" ]]; then
  set -x
fi

JOURNAL_DIR="${NOTES_JOURNAL:-$HOME/Notes/journal}/daily"
TEMPLATES_DIR="${TEMPLATES}/journal"
TEMPLATE_FILE="$TEMPLATES_DIR/daily.md"

DATE_CMD="date"
JN_EDITOR=${VISUAL:-${EDITOR:-}}
EDITOR_OPTS="+5"

usage() {
  local THIS_SCRIPT="$(basename $0)"

  cat<<EOU
  Usage: $THIS_SCRIPT [OPTIONS] <date-1> [<date-2>...]

  A utility for creating and editing personal journal files.

  Dates can be supplied in formats recoginzed by the gnu 'date'
  command.  Defaults to 'today' if no date argument is supplied.

  Examples:

    # open a journal entry for today
    $THIS_SCRIPT

    # open journal entries for several days
    $THIS_SCRIPT 2020-09-01 yesterday today

    # list journal file for 5 days ago
    $THIS_SCRIPT -l "5 days ago"


  OPTIONS:
     -h:  Show this message
     -l:  List prepared journal files without opening editor
     -p:  Prepare header of entry files.  Can be used without edit.

EOU
}

precheck() {
  if [[ $(uname -s | grep -i darwin) ]]; then
    DATE_CMD=gdate

    if [[ ! $(command -v gdate) ]]; then
      echo "'gdate' not found. Install gnu coreutils"
      echo "  brew install coreutils"
      exit 1
    fi
  fi

  if [[ ! -d "$JOURNAL_DIR" ]]; then
    echo "Journal directory not found: $JOURNAL_DIR"
    exit 1
  fi

  if [[ ! $(command -v $JN_EDITOR) ]]; then
    if [[ -z "$JN_EDITOR" ]]; then
      echo "Either \$EDITOR or \$VISUAL must be set."
    else
      echo "$JN_EDITOR editor not found.  Check \$VISUAL and \$EDITOR"
    fi
    exit 1
  fi

  if [[ ! $(command -v envsubst) ]]; then
    echo "'envsubst' command not found"
    echo 1
  fi

  if [[ ! -d "$TEMPLATES_DIR" ]]; then
    echo "Templates directory not found; check \$TEMPLATES"
    exit 1
  fi

  return 0
}

isodate() {
  $DATE_CMD -d "$1" +%Y-%m-%d
}

date_path() {
  $DATE_CMD -d "$1" "+%Y/%m"
}

setup_vars() {
  local isodate="$1"

  export DATE=$($DATE_CMD -d "$day" +%Y-%m-%d)
  export WEEKDAY=$($DATE_CMD -d "$day" +%A)
}


jnfile() {
  local isodate="$1"
  local entry_dir="$(date_path "$isodate")"

  printf "$JOURNAL_DIR/%s/%s.md" "$entry_dir" "$isodate"
}


header() {
  local day="$1"
  setup_vars "$day"

  if [[ -f "$TEMPLATE_FILE" ]]; then
    envsubst < "$TEMPLATE_FILE"
  else
    printf -- '---\ndate: "%s"\nweekday: "%s"\nweight: \n---\n\n' \
      "$DATE" "$WEEKDAY"
  fi
}


prepare() {
  local jnfile="$1"
  local isodate="$2"

  mkdir -p "$(dirname "$jnfile")"

  if [[ ! -f "$jnfile" ]]; then
    header "$isodate" >> "$jnfile"
  else
    touch "$jnfile"
  fi

  echo -n "$jnfile"
}


do_prepare=true
do_edit=true

while getopts 'hlp' OPTION
do
  case $OPTION in
    l)  do_edit=''
        do_prepare=''
        ;;
    p)  do_prepare=true
        do_edit=''
        ;;
    h|?)
        usage
        exit 1
        ;;
  esac
done

shift $((OPTIND - 1))


precheck
days=("$@")
files=""

# default to 'today'
if [[ ${#days[@]} -eq 0 ]]; then
  days=('today')
fi


for day in "${days[@]}"; do
  isodate=$(isodate "$day")
  jnfile=$(jnfile "$isodate")
  if [[ -n $do_prepare ]]; then
    prepare "$jnfile" "$isodate"
  else
    echo "$jnfile"
  fi

  files="${files} $jnfile"
done

if [[ -n $do_edit ]]; then
  $JN_EDITOR $EDITOR_OPTS $files
fi


