#!/usr/bin/env bash
#
# wrapper script for launching journal workspace

# fail early
set -eou pipefail

if [[ -n "${DEBUG:=}" ]]; then
  set -x
fi

THIS_SCRIPT="${0##*/}"
BASE_DIR="$(cd "${0%/*}" && pwd)"

SESSION_NAME="journal"
JN_WINDOW="jn"
TASK_WINDOW="@GTD"
JN_DIR="${NOTES_JOURNAL:-$HOME/Notes/journal}"
TASKS_DIR="$NOTES_TASKS"

# keep strict varible checks happy
TMUX="${TMUX:-}"
TMUX_PANE="${TMUX:-}"


usage() {
  cat <<-EOU
	Usage: $THIS_SCRIPT [OPTIONS] <COMMAND>
	
	Tmux session launcher for journal workspace.
	
	OPTIONS
	   -h      Show this message

EOU
}


attach_or_launch() {
  if [[ ! -z "$TMUX" ]] || [[ ! -z "$TMUX_PANE" ]]; then
      echo "Already inside a tmux session, do not know what to do"
      exit 1
  fi

  if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
    echo "attaching to existing session..."
    tmux attach -t "$SESSION_NAME"
    return
  fi

  local jn_window="${SESSION_NAME}:${JN_WINDOW}"
  local jn_main_pane="${jn_window}.1"
  local jn_aux_pane="${jn_window}.2"

  local task_window="${SESSION_NAME}:${TASK_WINDOW}"
  local task_main_pane="${task_window}.1"
  local task_aux_pane="${task_window}.2"

  #cd "$JN_DIR"

  # jn entry window
  tmux new-session -c "$JN_DIR" -n "$JN_WINDOW" -d -s "$SESSION_NAME"
  tmux split -h -c "$JN_DIR" -t "$SESSION_NAME"
  #tmux select-pane -t "$jn_main_pane"
  tmux resize-pane -t "$jn_main_pane" -x 55%
  tmux send-keys -t "$jn_aux_pane" 'repos latest' Enter
  #tmux send-keys -t "$jn_aux_pane" 'cheat emojify' Enter

  # task window
  tmux new-window -c "$TASKS_DIR" -n "$TASK_WINDOW"

  # set focus and hop in
  tmux select-window -t "$jn_window"
  tmux select-pane -t "$jn_main_pane"
  tmux attach -t "$SESSION_NAME"
}


all() {
  attach_or_launch
}


if [[ $# -eq 0 ]]; then
  all "$@"
else
  while [[ $# -gt 0 ]]; do
    case "$1" in
      help|-h)
        usage
        exit 0
        ;;
      *)
        "$1" "$@"
        ;;
    esac
    shift
  done
fi

