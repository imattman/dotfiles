[user]
  name = Matt Phillips
  email = code@mattman.dev
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  ui = auto
[init]
	defaultBranch = main
[core]
  excludesfile = ~/.gitignore_global
  # autocrlf values: true -> always convert, false -> never convert, input -> convert on commit
  autocrlf = input
  editor = $EDITOR
[merge]
  # complain if fast-forward merge isn't an option
  ff = only
[alias]
  mainbranch = "!git remote show origin | sed -n '/HEAD branch/s/.*: //p'"
  pull-rebase = "!git pull origin $(git mainbranch) --rebase"
  update-branch = "!git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase"
  publish = push -u origin HEAD --force-with-lease
  pub = publish
  stat = status
  s = status -s -b
  st = status --short --branch
  shorty = status --short --branch
  dif = diff
  diffc = diff --cached
  co = checkout
  co-date = "!f() { d=${1:-2020-01-01}; git checkout $(git rev-list -1 --before=$d HEAD); }; f"
  log-find = log --all --name-status --grep
  find-log = log --all --name-status --grep
  g = "grep --break --heading --line-number"
  grep-group = "grep --break --heading --line-number"
  br = branch -a
  stsh = stash --keep-index
  staash = stash --include-untracked
  staaash = stash --all
  parents = "rev-list --parents --topo-order HEAD"
  common-ancestor = merge-base
  oldest-ancestor = "!zsh -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1' -"
  first-commit = "log --max-parents=0 HEAD"
  first-commit-hash = "rev-list --max-parents=0 HEAD"
  last = log -1 HEAD
  logs = log --pretty=format:'%h%x09%ad%x09%an%x09%s' --date=short
  logsc = log --pretty=format:'%C(yellow)%h%x09%Cred%ad%x09%Cblue%an%Cgreen%d%x09%Creset%s' --date=short
  lol = log --oneline --graph --decorate
  log-dates = log --format=fuller
  logd = log --format=fuller
  logdf = log --format=fuller --stat
  log-details = log --format=fuller --stat
  tree = log --graph --branches --pretty=oneline --decorate
  grog = log --graph --abbrev-commit --decorate --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)'
  authors-remote = for-each-ref --sort=authordate --format='%(color:cyan)%(authordate:format:%m/%d/%Y %I:%M %p)%(align:25,left)%(color:yellow) %(authorname)%(end)%(color:reset)%(refname:strip=3)' refs/remotes
  # commit message
  log-msg = log --format=%B
  log-msg-latest = log --format=%B -n 1
  # show just files changed in revision
  log-files-only = diff-tree --no-commit-id --name-only -r 
  history = log --follow
  # list most commonly changed files in repo
  code-changes = "!git log --format=format: --name-only | egrep -v '^$' | sort | uniq -c | sort -rg | head -10"
  syncupstreammain = "!git pull upstream main && git push origin main"
  syncupstreammaster = "!git pull upstream master && git push origin master"
  submodule-update = "!git submodule update --init --recursive"
  rollback-all = "!git checkout -- $(git ls-files -m)"
  unstage-all = "!git reset HEAD $(git ls-files -m)"
  commend = commit --amend --no-edit
  # a hack to reset commit date to now
  set-last-commit-now = "!git commit --amend --no-edit --date=\"$(date -R)\""
  files-untracked = ls-files -o --exclude-standard
  files-ignored = ls-files --others -i --exclude-standard
  files-modified = ls-files -m
  delete-merged = "!git branch -D $(git branch --merged | grep -v '^*')"
  current-branch = "rev-parse --abbrev-ref HEAD"
  url-origin = "!git remote get-url origin"
  gc-now = "gc --prune='0 days'"
  # SVN habits
  svn-stat = "!git --no-pager diff --name-status remotes/git-svn"
  svn-diff = diff remotes/git-svn
  fixup = commit --amend -C HEAD
  up = pull --rebase --autostash
[fetch]
  # clobber branches that are no longer on the remote
  prune = true
[push]
  default = simple
[pull]
  # perform merge
  rebase = false
  # avoid unnecessary merge commits
  # rebase = true
[branch]
#  autosetuprebase = always
[grep]
  extendRegexp = true
  lineNumber = true

[credential]
  helper = osxkeychain

